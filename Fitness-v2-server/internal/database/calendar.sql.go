// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: calendar.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const getCalendarDataByDate = `-- name: GetCalendarDataByDate :many

SELECT m.name 
FROM meal_consumed AS mc 
LEFT JOIN meals AS m 
ON m.id = mc.meal_id 
WHERE date=$1
AND m.user_id=$2
`

type GetCalendarDataByDateParams struct {
	Date   time.Time
	UserID uuid.UUID
}

func (q *Queries) GetCalendarDataByDate(ctx context.Context, arg GetCalendarDataByDateParams) ([]sql.NullString, error) {
	rows, err := q.db.QueryContext(ctx, getCalendarDataByDate, arg.Date, arg.UserID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []sql.NullString
	for rows.Next() {
		var name sql.NullString
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
